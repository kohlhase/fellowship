
    > Current logic: intuitionistic sequent calculus.
      

    > Current logic: intuitionistic sequent calculus.
      

    > Current logic: intuitionistic sequent calculus.
      

    > A,B defined.
      

    > Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<?1||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        .... (1) <======
      done
      
      1 goal yet to prove!
      
      
       |-----  1
      *:¬(A-B)⇒¬B⇒¬A
      

    > Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).?1.1||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        .... (1.1) <======
      done
      
      1 goal yet to prove!
      
      
      nab:¬(A-B)
       |-----  1.1
      *:¬B⇒¬A
      

    > Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.?1.1.1||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        .... (1.1.1) <======
      done
      
      1 goal yet to prove!
      
      
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1
      *:¬A
      

    > Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||?1.1.1.1>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
          ...(1.1.1.1) <======
        done
      done
      
      1 goal yet to prove!
      
      
      *:A
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1.1
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||μ'a:A.<?1.1.1.1.1||?1.1.1.1.2>>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
            we proved A (a)
            .... (1.1.1.1.1) <======
          ...(1.1.1.1.2)
        done
      done
      
      2 goals yet to prove!
      
      
      a:A
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1.1.1
      *:¬(A-B)
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||μ'a:A.<nab||?1.1.1.1.2>>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
            we proved A (a)
            by nab
          ...(1.1.1.1.2) <======
        done
      done
      
      1 goal yet to prove!
      
      
      *:¬(A-B)
      a:A
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1.1.2
      

    > Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||μ'a:A.<nab||μ'toimprove4:¬(A-B).<toimprove4||?1.1.1.1.2.1*_F_>>>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
            we proved A (a)
            by nab
            we proved ¬(A-B) (toimprove4)
            by toimprove4
            and .... (1.1.1.1.2.1) <======
          absurd
        done
      done
      
      1 goal yet to prove!
      
      
      a:A
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1.1.2.1
      *:A-B
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||μ'a:A.<nab||μ'toimprove4:¬(A-B).<toimprove4||?1.1.1.1.2.1.1*?1.1.1.1.2.1.2*_F_>>>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
            we proved A (a)
            by nab
            we proved ¬(A-B) (toimprove4)
            by toimprove4
            and <???
            ...(1.1.1.1.2.1.1) <======
              .... (1.1.1.1.2.1.2)
            ???>
          absurd
        done
      done
      
      2 goals yet to prove!
      
      
      *:B
      a:A
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1.1.2.1.1
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||μ'a:A.<nab||μ'toimprove4:¬(A-B).<toimprove4||μ'b:B.<?1.1.1.1.2.1.1.1||?1.1.1.1.2.1.1.2>*?1.1.1.1.2.1.2*_F_>>>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
            we proved A (a)
            by nab
            we proved ¬(A-B) (toimprove4)
            by toimprove4
            and <???
              we proved B (b)
              .... (1.1.1.1.2.1.1.1) <======
            ...(1.1.1.1.2.1.1.2)
              .... (1.1.1.1.2.1.2)
            ???>
          absurd
        done
      done
      
      3 goals yet to prove!
      
      
      b:B
      a:A
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1.1.2.1.1.1
      *:¬B
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||μ'a:A.<nab||μ'toimprove4:¬(A-B).<toimprove4||μ'b:B.<nb||?1.1.1.1.2.1.1.2>*?1.1.1.1.2.1.2*_F_>>>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
            we proved A (a)
            by nab
            we proved ¬(A-B) (toimprove4)
            by toimprove4
            and <???
              we proved B (b)
              by nb
            ...(1.1.1.1.2.1.1.2) <======
              .... (1.1.1.1.2.1.2)
            ???>
          absurd
        done
      done
      
      2 goals yet to prove!
      
      
      *:¬B
      b:B
      a:A
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1.1.2.1.1.2
      

    > Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||μ'a:A.<nab||μ'toimprove4:¬(A-B).<toimprove4||μ'b:B.<nb||μ'toimprove5:¬B.<toimprove5||?1.1.1.1.2.1.1.2.1*_F_>>*?1.1.1.1.2.1.2*_F_>>>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
            we proved A (a)
            by nab
            we proved ¬(A-B) (toimprove4)
            by toimprove4
            and <???
              we proved B (b)
              by nb
              we proved ¬B (toimprove5)
              by toimprove5
              and .... (1.1.1.1.2.1.1.2.1) <======
            absurd
              .... (1.1.1.1.2.1.2)
            ???>
          absurd
        done
      done
      
      2 goals yet to prove!
      
      
      b:B
      a:A
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1.1.2.1.1.2.1
      *:B
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||μ'a:A.<nab||μ'toimprove4:¬(A-B).<toimprove4||μ'b:B.<nb||μ'toimprove5:¬B.<toimprove5||b*_F_>>*?1.1.1.1.2.1.2*_F_>>>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
            we proved A (a)
            by nab
            we proved ¬(A-B) (toimprove4)
            by toimprove4
            and <???
              we proved B (b)
              by nb
              we proved ¬B (toimprove5)
              by toimprove5
              and by b
            absurd
              .... (1.1.1.1.2.1.2) <======
            ???>
          absurd
        done
      done
      
      1 goal yet to prove!
      
      
      a:A
      nb:¬B
      nab:¬(A-B)
       |-----  1.1.1.1.2.1.2
      *:A
      

    > Closed the last branch: 
      Proof completed!
      
      Proof term: 
      μthesis:¬(A-B)⇒¬B⇒¬A.<λnab:¬(A-B).λnb:¬B.μtoimprove1:¬A.<λtoimprove2:A.μtoimprove3:⊥.<toimprove2||μ'a:A.<nab||μ'toimprove4:¬(A-B).<toimprove4||μ'b:B.<nb||μ'toimprove5:¬B.<toimprove5||b*_F_>>*a*_F_>>>||toimprove1>||thesis>
      Natural language:
      we need to prove ¬(A-B)⇒¬B⇒¬A
        assume ¬(A-B) (nab)
        assume ¬B (nb)
        we need to prove ¬A
          assume A (toimprove2)
          we need to prove ⊥
            by toimprove2
            we proved A (a)
            by nab
            we proved ¬(A-B) (toimprove4)
            by toimprove4
            and <???
              we proved B (b)
              by nb
              we proved ¬B (toimprove5)
              by toimprove5
              and by b
            absurd
              by a
            ???>
          absurd
        done
      done
      
      

    > t1 defined.
      

    > Firing up Coq for confirmation.
      

    > Firing up Coq for confirmation.
      

    > File ./test_sl_2.nl written. Enjoy the reading.
      

    > EOF!

