
    > Current logic: intuitionistic sequent calculus.
      

    > Current logic: classic sequent calculus.
      

    > Current logic: classic sequent calculus.
      

    > A,B defined.
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<?1||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        .... (1) <======
      done
      
      1 goal yet to prove!
      
      
       |-----  1
      *:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(?1.1,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        .... (1.1) <======
        and
        .... (1.2)
      done
      
      2 goals yet to prove!
      
      
       |-----  1.1
      *:(A-B)⇒¬(¬B⇒¬A)
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.?1.1.1,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        .... (1.1.1) <======
        and
        .... (1.2)
      done
      
      2 goals yet to prove!
      
      
      ab:A-B
       |-----  1.1.1
      *:¬(¬B⇒¬A)
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||?1.1.1.1>||toimprove1>,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
          ...(1.1.1.1) <======
        done
        and
        .... (1.2)
      done
      
      2 goals yet to prove!
      
      
      *:¬B⇒¬A
      ab:A-B
       |-----  1.1.1.1
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||?1.1.1.1.1*?1.1.1.1.2>||toimprove1>,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and .... (1.1.1.1.1) <======
          ...(1.1.1.1.2)
        done
        and
        .... (1.2)
      done
      
      3 goals yet to prove!
      
      
      ab:A-B
       |-----  1.1.1.1.1
      *:¬B
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||?1.1.1.1.1.1>||toimprove4>*?1.1.1.1.2>||toimprove1>,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
              ...(1.1.1.1.1.1) <======
            done
          ...(1.1.1.1.2)
        done
        and
        .... (1.2)
      done
      
      3 goals yet to prove!
      
      
      *:B
      ab:A-B
       |-----  1.1.1.1.1.1
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<?1.1.1.1.1.1.1||?1.1.1.1.1.1.2>>||toimprove4>*?1.1.1.1.2>||toimprove1>,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                .... (1.1.1.1.1.1.1) <======
              ...(1.1.1.1.1.1.2)
            done
          ...(1.1.1.1.2)
        done
        and
        .... (1.2)
      done
      
      4 goals yet to prove!
      
      
      b:B
      ab:A-B
       |-----  1.1.1.1.1.1.1
      *:A-B
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||?1.1.1.1.1.1.2>>||toimprove4>*?1.1.1.1.2>||toimprove1>,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
              ...(1.1.1.1.1.1.2) <======
            done
          ...(1.1.1.1.2)
        done
        and
        .... (1.2)
      done
      
      3 goals yet to prove!
      
      
      *:A-B
      b:B
      ab:A-B
       |-----  1.1.1.1.1.1.2
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.?1.1.1.1.1.1.2.1>>||toimprove4>*?1.1.1.1.2>||toimprove1>,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                ...(1.1.1.1.1.1.2.1) <======
                
            done
          ...(1.1.1.1.2)
        done
        and
        .... (1.2)
      done
      
      3 goals yet to prove!
      
      
      *:A
      b:B
      ab:A-B
       |-----  1.1.1.1.1.1.2.1
      b2:B
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<?1.1.1.1.1.1.2.1.1||?1.1.1.1.1.1.2.1.2>>>||toimprove4>*?1.1.1.1.2>||toimprove1>,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  .... (1.1.1.1.1.1.2.1.1) <======
                ...(1.1.1.1.1.1.2.1.2)
                
            done
          ...(1.1.1.1.2)
        done
        and
        .... (1.2)
      done
      
      4 goals yet to prove!
      
      
      a:A
      b:B
      ab:A-B
       |-----  1.1.1.1.1.1.2.1.1
      *:B
      b2:B
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||?1.1.1.1.1.1.2.1.2>>>||toimprove4>*?1.1.1.1.2>||toimprove1>,?1.2)||thesis>
      Natural language:
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                ...(1.1.1.1.1.1.2.1.2) <======
                
            done
          ...(1.1.1.1.2)
        done
        and
        .... (1.2)
      done
      
      3 goals yet to prove!
      
      
      *:B
      a:A
      b:B
      ab:A-B
       |-----  1.1.1.1.1.1.2.1.2
      b2:B
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*?1.1.1.1.2>||toimprove1>,?1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*?1.1.1.1.2>||toimprove1>,?1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
          ...(1.1.1.1.2) <======
        done
        and
        .... (1.2)
      done
      
      2 goals yet to prove!
      
      
      *:¬A
      ab:A-B
       |-----  1.1.1.1.2
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||?1.1.1.1.2.1*_F_>>||toimprove1>,?1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||?1.1.1.1.2.1*_F_>>||toimprove1>,?1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and .... (1.1.1.1.2.1) <======
          absurd
        done
        and
        .... (1.2)
      done
      
      2 goals yet to prove!
      
      
      ab:A-B
       |-----  1.1.1.1.2.1
      *:A
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<?1.1.1.1.2.1.1||?1.1.1.1.2.1.2>*_F_>>||toimprove1>,?1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<?1.1.1.1.2.1.1||?1.1.1.1.2.1.2>*_F_>>||toimprove1>,?1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              .... (1.1.1.1.2.1.1) <======
            ...(1.1.1.1.2.1.2)
          absurd
        done
        and
        .... (1.2)
      done
      
      3 goals yet to prove!
      
      
      ab:A-B
       |-----  1.1.1.1.2.1.1
      *:A-B
      a:A
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||?1.1.1.1.2.1.2>*_F_>>||toimprove1>,?1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||?1.1.1.1.2.1.2>*_F_>>||toimprove1>,?1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by ab
            ...(1.1.1.1.2.1.2) <======
          absurd
        done
        and
        .... (1.2)
      done
      
      2 goals yet to prove!
      
      
      *:A-B
      ab:A-B
       |-----  1.1.1.1.2.1.2
      a:A
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.?1.1.1.1.2.1.2.1>*_F_>>||toimprove1>,?1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.?1.1.1.1.2.1.2.1>*_F_>>||toimprove1>,?1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by ab
              <???B(b)
              ...(1.1.1.1.2.1.2.1) <======
              
          absurd
        done
        and
        .... (1.2)
      done
      
      2 goals yet to prove!
      
      
      *:A
      ab:A-B
       |-----  1.1.1.1.2.1.2.1
      b:B
      a:A
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,?1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,?1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        .... (1.2) <======
      done
      
      1 goal yet to prove!
      
      
       |-----  1.2
      *:¬(¬B⇒¬A)⇒(A-B)
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).?1.2.1)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).?1.2.1)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        .... (1.2.1) <======
      done
      
      1 goal yet to prove!
      
      
      mt:¬(¬B⇒¬A)
       |-----  1.2.1
      *:A-B
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).?1.2.1.1*?1.2.1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).?1.2.1.1*?1.2.1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
        ...(1.2.1.1) <======
          .... (1.2.1.2)
        ???>
      done
      
      2 goals yet to prove!
      
      
      *:B
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.1
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||?1.2.1.1.2.1*_F_>>*?1.2.1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||?1.2.1.1.2.1*_F_>>*?1.2.1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and .... (1.2.1.1.2.1) <======
        absurd
          .... (1.2.1.2)
        ???>
      done
      
      2 goals yet to prove!
      
      
      b:B
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.1.2.1
      *:¬B⇒¬A
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.?1.2.1.1.2.1.1*_F_>>*?1.2.1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.?1.2.1.1.2.1.1*_F_>>*?1.2.1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and assume ¬B (nb)
          .... (1.2.1.1.2.1.1) <======
        absurd
          .... (1.2.1.2)
        ???>
      done
      
      2 goals yet to prove!
      
      
      nb:¬B
      b:B
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.1.2.1.1
      *:¬A
      

    > 2 subgoals generated. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<?1.2.1.1.2.1.1.1||?1.2.1.1.2.1.1.2>*_F_>>*?1.2.1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<?1.2.1.1.2.1.1.1||?1.2.1.1.2.1.1.2>*_F_>>*?1.2.1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and assume ¬B (nb)
          we need to prove ¬A
            .... (1.2.1.1.2.1.1.1) <======
          ...(1.2.1.1.2.1.1.2)
        absurd
          .... (1.2.1.2)
        ???>
      done
      
      3 goals yet to prove!
      
      
      nb:¬B
      b:B
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.1.2.1.1.1
      *:¬B
      na:¬A
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||?1.2.1.1.2.1.1.2>*_F_>>*?1.2.1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||?1.2.1.1.2.1.1.2>*_F_>>*?1.2.1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and assume ¬B (nb)
          we need to prove ¬A
            by nb
          ...(1.2.1.1.2.1.1.2) <======
        absurd
          .... (1.2.1.2)
        ???>
      done
      
      2 goals yet to prove!
      
      
      *:¬B
      nb:¬B
      b:B
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.1.2.1.1.2
      na:¬A
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||?1.2.1.1.2.1.1.2.1*_F_>>*_F_>>*?1.2.1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||?1.2.1.1.2.1.1.2.1*_F_>>*_F_>>*?1.2.1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and assume ¬B (nb)
          we need to prove ¬A
            by nb
            we proved ¬B (toimprove9)
            by toimprove9
            and .... (1.2.1.1.2.1.1.2.1) <======
          absurd
        absurd
          .... (1.2.1.2)
        ???>
      done
      
      2 goals yet to prove!
      
      
      nb:¬B
      b:B
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.1.2.1.1.2.1
      *:B
      na:¬A
      

    > Closed a branch. 
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*?1.2.1.2)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*?1.2.1.2)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and assume ¬B (nb)
          we need to prove ¬A
            by nb
            we proved ¬B (toimprove9)
            by toimprove9
            and by b
          absurd
        absurd
          .... (1.2.1.2) <======
        ???>
      done
      
      1 goal yet to prove!
      
      
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.2
      *:A
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*μa:A.<mt||μ'toimprove10:¬(¬B⇒¬A).<toimprove10||?1.2.1.2.2.1*_F_>>)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*μa:A.<mt||μ'toimprove10:¬(¬B⇒¬A).<toimprove10||?1.2.1.2.2.1*_F_>>)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and assume ¬B (nb)
          we need to prove ¬A
            by nb
            we proved ¬B (toimprove9)
            by toimprove9
            and by b
          absurd
        absurd
          we need to prove A
            by mt
            we proved ¬(¬B⇒¬A) (toimprove10)
            by toimprove10
            and .... (1.2.1.2.2.1) <======
          absurd
        ???>
      done
      
      1 goal yet to prove!
      
      
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.2.2.1
      *:¬B⇒¬A
      a:A
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*μa:A.<mt||μ'toimprove10:¬(¬B⇒¬A).<toimprove10||λnb:¬B.?1.2.1.2.2.1.1*_F_>>)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*μa:A.<mt||μ'toimprove10:¬(¬B⇒¬A).<toimprove10||λnb:¬B.?1.2.1.2.2.1.1*_F_>>)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and assume ¬B (nb)
          we need to prove ¬A
            by nb
            we proved ¬B (toimprove9)
            by toimprove9
            and by b
          absurd
        absurd
          we need to prove A
            by mt
            we proved ¬(¬B⇒¬A) (toimprove10)
            by toimprove10
            and assume ¬B (nb)
            .... (1.2.1.2.2.1.1) <======
          absurd
        ???>
      done
      
      1 goal yet to prove!
      
      
      nb:¬B
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.2.2.1.1
      *:¬A
      a:A
      

    > Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*μa:A.<mt||μ'toimprove10:¬(¬B⇒¬A).<toimprove10||λnb:¬B.μtoimprove11:¬A.<λtoimprove12:A.μtoimprove13:⊥.<toimprove12||?1.2.1.2.2.1.1.1>||toimprove11>*_F_>>)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*μa:A.<mt||μ'toimprove10:¬(¬B⇒¬A).<toimprove10||λnb:¬B.μtoimprove11:¬A.<λtoimprove12:A.μtoimprove13:⊥.<toimprove12||?1.2.1.2.2.1.1.1>||toimprove11>*_F_>>)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and assume ¬B (nb)
          we need to prove ¬A
            by nb
            we proved ¬B (toimprove9)
            by toimprove9
            and by b
          absurd
        absurd
          we need to prove A
            by mt
            we proved ¬(¬B⇒¬A) (toimprove10)
            by toimprove10
            and assume ¬B (nb)
            we need to prove ¬A
              assume A (toimprove12)
              we need to prove ⊥
                by toimprove12
              ...(1.2.1.2.2.1.1.1) <======
            done
          absurd
        ???>
      done
      
      1 goal yet to prove!
      
      
      *:A
      nb:¬B
      mt:¬(¬B⇒¬A)
       |-----  1.2.1.2.2.1.1.1
      a:A
      

    > Closed the last branch: 
      Proof completed!
      
      Proof term: 
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||b2>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μa:A.<ab||λb:B.a>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*μa:A.<mt||μ'toimprove10:¬(¬B⇒¬A).<toimprove10||λnb:¬B.μtoimprove11:¬A.<λtoimprove12:A.μtoimprove13:⊥.<toimprove12||a>||toimprove11>*_F_>>)||thesis>
      Natural language:
      !!! The proof is classical; converted to the following LJ + EM proof:
      μthesis:((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B)).<(λab:A-B.μtoimprove1:¬(¬B⇒¬A).<λtoimprove2:¬B⇒¬A.μtoimprove3:⊥.<toimprove2||μtoimprove4:¬B.<λtoimprove5:B.μtoimprove6:⊥.<toimprove5||μ'b:B.<ab||λb2:B.μ'a:A.<b||μ'x1:B.<b2||x1*_F_>>>>||toimprove4>*μ'toimprove7:¬A.<toimprove7||μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<ab||λb:B.μ'x2:A.<a||x2*_F_>>)>*_F_>>||toimprove1>,λmt:¬(¬B⇒¬A).μ'b:B.<mt||μ'toimprove8:¬(¬B⇒¬A).<toimprove8||λnb:¬B.μna:¬A.<nb||μ'toimprove9:¬B.<toimprove9||b*_F_>>*_F_>>*μx1:A.<classic||(μ'x2:A.<x2||x1>,μ'a:¬A.<mt||μ'toimprove10:¬(¬B⇒¬A).<toimprove10||λnb:¬B.μtoimprove11:¬A.<λtoimprove12:A.μtoimprove13:⊥.<toimprove12||μ'x2:A.<a||x2*_F_>>||toimprove11>*_F_>>)>)||thesis>
      we need to prove ((A-B)⇒¬(¬B⇒¬A))∧(¬(¬B⇒¬A)⇒(A-B))
        assume A-B (ab)
        we need to prove ¬(¬B⇒¬A)
          assume ¬B⇒¬A (toimprove2)
          we need to prove ⊥
            by toimprove2
            and we need to prove ¬B
              assume B (toimprove5)
              we need to prove ⊥
                by toimprove5
                we proved B (b)
                by ab
                <???B(b2)
                  we proved A (a)
                  by b
                  we proved B (x1)
                  by b2
                  and by x1
                absurd
                
            done
            we proved ¬A (toimprove7)
            by toimprove7
            and we need to prove A
              by classic
              by cases: 
                first case:
                  by case hypothesis
                  we proved A (x2)
                  by x2
                done
                second case:
                  by case hypothesis
                  we proved ¬A (a)
                  by ab
                  <???B(b)
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                  
          absurd
        done
        and
        assume ¬(¬B⇒¬A) (mt)
        <???
          we proved B (b)
          by mt
          we proved ¬(¬B⇒¬A) (toimprove8)
          by toimprove8
          and assume ¬B (nb)
          we need to prove ¬A
            by nb
            we proved ¬B (toimprove9)
            by toimprove9
            and by b
          absurd
        absurd
          we need to prove A
            by classic
            by cases: 
              first case:
                by case hypothesis
                we proved A (x2)
                by x2
              done
              second case:
                by case hypothesis
                we proved ¬A (a)
                by mt
                we proved ¬(¬B⇒¬A) (toimprove10)
                by toimprove10
                and assume ¬B (nb)
                we need to prove ¬A
                  assume A (toimprove12)
                  we need to prove ⊥
                    by toimprove12
                    we proved A (x2)
                    by a
                    and by x2
                  absurd
                done
              absurd
        ???>
      done
      
      

    > t1 defined.
      

    > Firing up Coq for confirmation.
      

    > Firing up Coq for confirmation.
      

    > File ./test_sl_1.nl written. Enjoy the reading.
      

    > EOF!

